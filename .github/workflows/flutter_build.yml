name: Build Flutter APK

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Update AGP version in settings.gradle (multiple patterns)
        run: |
          # Essayer différents patterns pour l'AGP
          sed -i "s/8\.1\.0/8.6.0/g" android/settings.gradle || true
          sed -i "s/8\.1\.1/8.6.0/g" android/settings.gradle || true
          sed -i "s/8\.0\.[0-9]/8.6.0/g" android/settings.gradle || true
          sed -i "s/7\.[0-9]\.[0-9]/8.6.0/g" android/settings.gradle || true

      - name: Update AGP version in build.gradle (multiple patterns)
        run: |
          # Essayer différents patterns pour l'AGP
          sed -i "s/8\.1\.0/8.6.0/g" android/build.gradle || true
          sed -i "s/8\.1\.1/8.6.0/g" android/build.gradle || true
          sed -i "s/8\.0\.[0-9]/8.6.0/g" android/build.gradle || true
          sed -i "s/7\.[0-9]\.[0-9]/8.6.0/g" android/build.gradle || true
          # Pour le format classpath dans build.gradle
          sed -i "s/com\.android\.tools\.build:gradle:[0-9]\+\.[0-9]\+\.[0-9]\+/com.android.tools.build:gradle:8.6.0/g" android/build.gradle || true

      - name: Update Kotlin version in settings.gradle (multiple patterns)
        run: |
          sed -i "s/1\.8\.22/2.1.0/g" android/settings.gradle || true
          sed -i "s/1\.9\.[0-9]\+/2.1.0/g" android/settings.gradle || true
          sed -i "s/1\.8\.[0-9]\+/2.1.0/g" android/settings.gradle || true

      - name: Update Kotlin version in build.gradle (multiple patterns)
        run: |
          sed -i "s/1\.8\.22/2.1.0/g" android/build.gradle || true
          sed -i "s/1\.9\.[0-9]\+/2.1.0/g" android/build.gradle || true
          sed -i "s/1\.8\.[0-9]\+/2.1.0/g" android/build.gradle || true

      - name: Enable Core Library Desugaring
        run: |
          BUILD_FILE="android/app/build.gradle"
          
          if [ -f "$BUILD_FILE" ]; then
            echo "Configuration du desugaring dans $BUILD_FILE..."
            cp "$BUILD_FILE" "${BUILD_FILE}.backup"
            
            # Vérifier si desugaring est déjà configuré
            if grep -q "coreLibraryDesugaringEnabled" "$BUILD_FILE" && grep -q "coreLibraryDesugaring" "$BUILD_FILE"; then
              echo "Desugaring déjà configuré"
            else
              # Ajouter coreLibraryDesugaringEnabled dans compileOptions
              if ! grep -q "coreLibraryDesugaringEnabled" "$BUILD_FILE"; then
                if grep -q "compileOptions {" "$BUILD_FILE"; then
                  sed -i '/compileOptions {/a\        coreLibraryDesugaringEnabled true' "$BUILD_FILE"
                  echo "Ajout de coreLibraryDesugaringEnabled"
                fi
              fi
              
              # Ajouter la dépendance de desugaring - créer le bloc dependencies s'il n'existe pas
              if ! grep -q "coreLibraryDesugaring.*desugar_jdk_libs" "$BUILD_FILE"; then
                # Ajouter le bloc dependencies à la fin si pas présent
                if ! grep -q "^dependencies {" "$BUILD_FILE"; then
                  echo "" >> "$BUILD_FILE"
                  echo "dependencies {" >> "$BUILD_FILE"
                  echo "    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'" >> "$BUILD_FILE"
                  echo "}" >> "$BUILD_FILE"
                  echo "Bloc dependencies créé avec desugaring"
                else
                  # Ajouter dans le bloc dependencies existant
                  sed -i '/^dependencies {/a\    coreLibraryDesugaring '\''com.android.tools:desugar_jdk_libs:2.0.4'\''' "$BUILD_FILE"
                  echo "Dépendance desugaring ajoutée"
                fi
              fi
            fi
          else
            echo "Fichier $BUILD_FILE non trouvé"
            exit 1
          fi

      - name: Verify build.gradle modifications
        run: |
          BUILD_FILE="android/app/build.gradle"
          echo "=== Vérification du fichier $BUILD_FILE ==="
          
          if [ -f "$BUILD_FILE" ]; then
            echo "✓ Fichier trouvé"
            
            # Vérifier compileOptions
            echo ""
            echo "=== Section compileOptions ==="
            if grep -A 5 -B 2 "compileOptions" "$BUILD_FILE"; then
              if grep -q "coreLibraryDesugaringEnabled.*true" "$BUILD_FILE"; then
                echo "✓ coreLibraryDesugaringEnabled est activé"
              else
                echo "⚠️  coreLibraryDesugaringEnabled non trouvé ou non activé"
              fi
            else
              echo "❌ Section compileOptions non trouvée"
            fi
            
            # Vérifier dependencies
            echo ""
            echo "=== Section dependencies ==="
            if grep -A 10 -B 2 "dependencies" "$BUILD_FILE"; then
              if grep -q "coreLibraryDesugaring.*desugar_jdk_libs" "$BUILD_FILE"; then
                echo "✓ Dépendance coreLibraryDesugaring trouvée"
                grep -n "coreLibraryDesugaring.*desugar_jdk_libs" "$BUILD_FILE"
              else
                echo "❌ Dépendance coreLibraryDesugaring non trouvée"
              fi
            else
              echo "❌ Section dependencies non trouvée"
            fi
            
            # Résumé final
            echo ""
            echo "=== Résumé de la configuration desugaring ==="
            DESUGARING_ENABLED=$(grep -c "coreLibraryDesugaringEnabled.*true" "$BUILD_FILE" || echo "0")
            DESUGARING_DEP=$(grep -c "coreLibraryDesugaring.*desugar_jdk_libs" "$BUILD_FILE" || echo "0")
            
            if [ "$DESUGARING_ENABLED" -gt 0 ] && [ "$DESUGARING_DEP" -gt 0 ]; then
              echo "✅ Configuration desugaring COMPLÈTE"
            elif [ "$DESUGARING_ENABLED" -gt 0 ]; then
              echo "⚠️  Desugaring activé mais dépendance manquante"
            elif [ "$DESUGARING_DEP" -gt 0 ]; then
              echo "⚠️  Dépendance présente mais desugaring non activé"
            else
              echo "❌ Configuration desugaring INCOMPLÈTE"
            fi
          else
            echo "❌ Fichier $BUILD_FILE non trouvé"
          fi

      - name: Setup Java (for keystore handling)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE }}" | base64 --decode > android/app/upload-keystore.jks

      - name: Create key.properties
        run: |
          cat <<EOF > android/key.properties
          storePassword=${{ secrets.STORE_PASSWORD }}
          keyPassword=${{ secrets.KEY_PASSWORD }}
          keyAlias=${{ secrets.KEY_ALIAS }}
          storeFile=../app/upload-keystore.jks
          EOF

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: 'x64'

      - name: Clear Flutter cache
        run: flutter clean

      - name: Install dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release --android-skip-build-dependency-validation